[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "ST 558 Final Project EDA Document",
    "section": "",
    "text": "Introduction\nThis data set represents predictors of Diabetes. This data set represents 253,680 survey responses to the CDC’s Behavioral Risk Factor Surveillance System (BRFSS) survey administered in 2015. The target variable (Diabetes_binary) takes on two values: 0 if no diabetes and 1 for diabetes or prediabetes. The data set is unbalanced, meaning that there are more observations taking on the value of no diabetes vs. diabetes or prediabetes.\nThe purpose of the EDA that follows is to both visually and numerically explore the relationship of variables to the target variable - the presence of diabetes. Below, I will use bar plots for categorical variables and density plots or box plots for continuous variables to visually see differences. I will also compare means and medians for continuous variables for those with and without diabetes. For categorical variables, I will calculate and compare the percentage of those that have the predictor variable in those that either have or do not have diabetes.\nThe ultimate goal of modeling is to find the best predictive model (logistic regression, classification tree, and random forest) that can be used in the prediction of the diagnosis of Diabetes. This is beneficial because Diabetes is a very prevalent chronic disease. By using a predictive model, we could potentially provide earlier diagnosis and/or monitor patients that have a higher likelihood of developing Diabetes due to certain risk factors.\nBased on the EDA that follows, I have identified 5 significant predictors: High Blood Pressure, High Cholesterol, Heart Disease or Attack, General Health Rating, and Difficulty Walking. Information on the target variable and the predictor variables is below.\nThe Diabetes_binary column takes on 2 values: 0 for no diabetes and 1 for prediabetes or diabetes.\nThe HighBP column takes on 2 values: 0 for no high blood pressure and 1 for high blood pressure.\nThe HighChol column takes on 2 values: 0 for no high cholesterol and 1 for high cholesterol.\nThe HeartDiseaseorAttack column takes on 2 values: 0 if no coronary heart disease or myocardial infarction and 1 if have coronary heart disease or myocardial infarction.\nThe GenHlth column takes on 5 values based on rating of general health: 1 is excellent, 2 is very good, 3 good, 4 is fair, and 5 is poor.\nThe DiffWalk column takes on 2 values: 0 if no difficulty climbing stairs or walking and 1 if difficulty climbing stairs or walking.\n\n\nData\nIn this section, I will read in the data set and convert all appropriate variables to factors with relevant level names.\n\nlibrary(tidyverse)\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\ndiabetes_data$Diabetes_binary &lt;- factor(diabetes_data$Diabetes_binary, levels = c(0, 1), labels = c(\"no_diabetes\", \"diabetes\"))\n\ndiabetes_data$HighBP &lt;- factor(diabetes_data$HighBP, levels = c(0, 1), labels = c(\"no_hbp\", \"hbp\"))\n\ndiabetes_data$HighChol &lt;- factor(diabetes_data$HighChol, levels = c(0, 1), labels = c(\"no_high_chol\", \"high_chol\"))\n\ndiabetes_data$CholCheck &lt;- factor(diabetes_data$CholCheck, levels = c(0, 1), labels = c(\"no_chol_check\", \"chol_check\"))\n\ndiabetes_data$Smoker &lt;- factor(diabetes_data$Smoker, levels = c(0, 1), labels = c(\"non_smoker\", \"smoker\"))\n\ndiabetes_data$Stroke &lt;- factor(diabetes_data$Stroke, levels = c(0, 1), labels = c(\"no_stroke\", \"stroke\"))\n\ndiabetes_data$HeartDiseaseorAttack &lt;- factor(diabetes_data$HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"no_hd_or_attack\", \"hd_or_attack\"))\n\ndiabetes_data$PhysActivity &lt;- factor(diabetes_data$PhysActivity, levels = c(0, 1), labels = c(\"no_activity\", \"activity\"))\n\ndiabetes_data$Fruits &lt;- factor(diabetes_data$Fruits, levels = c(0, 1), labels = c(\"no_fruits\", \"fruits\"))\n\ndiabetes_data$Veggies &lt;- factor(diabetes_data$Veggies, levels = c(0, 1), labels = c(\"no_veggies\", \"veggies\"))\n\ndiabetes_data$HvyAlcoholConsump &lt;- factor(diabetes_data$HvyAlcoholConsump, levels = c(0, 1), labels = c(\"no_heavy_alc\", \"heavy_alc\"))\n\ndiabetes_data$AnyHealthcare &lt;- factor(diabetes_data$AnyHealthcare, levels = c(0, 1), labels = c(\"no_healthcare\", \"healthcare\"))\n\ndiabetes_data$NoDocbcCost &lt;- factor(diabetes_data$NoDocbcCost, levels = c(0, 1), labels = c(\"no_cost_issue\", \"cost_issue\"))\n\ndiabetes_data$GenHlth &lt;- factor(diabetes_data$GenHlth, levels = c(1, 2, 3, 4, 5), labels = c(\"excellent\", \"very_good\", \"good\", \"fair\", \"poor\"))\n\ndiabetes_data$DiffWalk &lt;- factor(diabetes_data$DiffWalk, levels = c(0, 1), labels = c(\"no_difficulty\", \"difficulty\"))\n\ndiabetes_data$Sex &lt;- factor(diabetes_data$Sex, levels = c(0, 1), labels = c(\"female\", \"male\"))\n\ndiabetes_data$Age &lt;- factor(diabetes_data$Age, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), labels = c(\"18_24\", \"25_29\", \"30_34\", \"35_39\", \"40_44\", \"45_49\", \"50_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\", \"80_or_more\"))\n\ndiabetes_data$Education &lt;- factor(diabetes_data$Education, levels = c(1, 2, 3, 4, 5, 6), labels = c(\"none\", \"elementary\", \"some_hs\", \"high_school\", \"some_college\", \"college_grad\"))\n\ndiabetes_data$Income &lt;- factor(diabetes_data$Income, levels = c(1, 2, 3, 4, 5, 6, 7, 8), labels = c(\"less_10k\", \"10k_15k\", \"15k_20k\", \"20k_25k\", \"25k_35k\", \"35k_50k\", \"50k_75k\", \"more_75k\"))\n\n#Check that columns have been converted correctly.\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol     CholCheck       BMI Smoker     Stroke   \n   &lt;fct&gt;           &lt;fct&gt;  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt; &lt;fct&gt;      &lt;fct&gt;    \n 1 no_diabetes     hbp    high_chol    chol_check       40 smoker     no_stroke\n 2 no_diabetes     no_hbp no_high_chol no_chol_check    25 smoker     no_stroke\n 3 no_diabetes     hbp    high_chol    chol_check       28 non_smoker no_stroke\n 4 no_diabetes     hbp    no_high_chol chol_check       27 non_smoker no_stroke\n 5 no_diabetes     hbp    high_chol    chol_check       24 non_smoker no_stroke\n 6 no_diabetes     hbp    high_chol    chol_check       25 smoker     no_stroke\n 7 no_diabetes     hbp    no_high_chol chol_check       30 smoker     no_stroke\n 8 no_diabetes     hbp    high_chol    chol_check       25 smoker     no_stroke\n 9 diabetes        hbp    high_chol    chol_check       30 smoker     no_stroke\n10 no_diabetes     no_hbp no_high_chol chol_check       24 non_smoker no_stroke\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;fct&gt;, Education &lt;fct&gt;, Income &lt;fct&gt;\n\n#Missing Data - There are no missing values in this dataset.\nmissing_vals &lt;- colSums(is.na(diabetes_data))\nmissing_vals\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\n\n\nSummarizations\nHere I will create graphical and numerical summaries on the variables above. Based on the summaries that follow, I have determined the most important variables in their relationship with Diabetes are: High Blood Pressure, High Cholesterol, Heart Disease or Attack, General Health Rating, and Difficulty Walking.\n\nHigh Blood Pressure Summary\nOf those without diabetes, 37.7% have high blood pressure. Of those with diabetes, 75.3% have high blood pressure. This does appear to be a significant predictor.\n\n#Bar plot of Diabetes with HighBP\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = HighBP)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with HBP.\n#Group by having diabetes or not having diabetes.\n#Count the number of people with HBP in each category and divide by the total count.\nhbp_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    hbp_count = sum(HighBP == \"hbp\"),\n    total_count = n(),\n    hbp_percent = (hbp_count / total_count) * 100\n  )\nhbp_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary hbp_count total_count hbp_percent\n  &lt;fct&gt;               &lt;int&gt;       &lt;int&gt;       &lt;dbl&gt;\n1 no_diabetes         82225      218334        37.7\n2 diabetes            26604       35346        75.3\n\n\n\n\nHigh Cholesterol Summary\nOf those without diabetes, 38.4% have high blood pressure. Of those with diabetes, 67% have high cholesterol. This does appear to be a significant predictor.\n\n#Bar plot of Diabetes with HighChol\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = HighChol)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with high cholesterol.\n#Group by having diabetes or not having diabetes.\n#Count the number of people with High Cholesterol in each category and divide by the total count.\nhigh_chol_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    high_chol_count = sum(HighChol == \"high_chol\"),\n    total_count = n(),\n    high_chol_percent = (high_chol_count / total_count) * 100\n  )\nhigh_chol_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary high_chol_count total_count high_chol_percent\n  &lt;fct&gt;                     &lt;int&gt;       &lt;int&gt;             &lt;dbl&gt;\n1 no_diabetes               83905      218334              38.4\n2 diabetes                  23686       35346              67.0\n\n\n\n\nCholesterol Check Summary\nOf those without diabetes, 95.8% have had a cholesterol check in the last five years. Of those with diabetes, 99.3% have had a cholesterol check. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Cholesterol Check.\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = CholCheck)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with Cholesterol Check.\n#Group by having diabetes or not having diabetes.\n#Count the number of people having a cholesterol check in each category and divide by the total count.\nchol_check_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    chol_check_count = sum(CholCheck == \"chol_check\"),\n    total_count = n(),\n    chol_check_percent = (chol_check_count / total_count) * 100\n  )\nchol_check_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary chol_check_count total_count chol_check_percent\n  &lt;fct&gt;                      &lt;int&gt;       &lt;int&gt;              &lt;dbl&gt;\n1 no_diabetes               209105      218334               95.8\n2 diabetes                   35105       35346               99.3\n\n\n\n\nBMI Summary\nOf those without diabetes, the mean BMI is 27.8 and standard deviation of 6.3 Of those with diabetes, the mean BMI is 31.9 with a standard deviation of 7.4 This does NOT appear to be a significant predictor.\n\n#BMI Graphical Display\nggplot(diabetes_data, aes(x = BMI, fill = Diabetes_binary)) +\n  geom_density(alpha = 0.5)\n\n\n\n#Numeric summary of Diabetes with BMI. \n#Group by having diabetes or not having diabetes.\n#Find the mean and median BMI in those with and without diabetes.\nbmi_numeric &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_bmi = mean(BMI),\n    median_bmi = median(BMI)\n  )\nbmi_numeric\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_bmi median_bmi\n  &lt;fct&gt;              &lt;dbl&gt;      &lt;dbl&gt;\n1 no_diabetes         27.8         27\n2 diabetes            31.9         31\n\n\n\n\nSmoker Summary\nOf those without diabetes, 43.1% smoke. Of those with diabetes, 51.8% smoke. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Smoker status\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Smoker)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with Smoker status. \n#Group by having diabetes or not having diabetes.\n#Count the number of people who smoke in each category and divide by the total count.\nsmoker_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    smoker_count = sum(Smoker == \"smoker\"),\n    total_count = n(),\n    smoker_percent = (smoker_count / total_count) * 100\n  )\nsmoker_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary smoker_count total_count smoker_percent\n  &lt;fct&gt;                  &lt;int&gt;       &lt;int&gt;          &lt;dbl&gt;\n1 no_diabetes            94106      218334           43.1\n2 diabetes               18317       35346           51.8\n\n\n\n\nStroke Summary\nOf those without diabetes, 3.22% have had a stroke. Of those with diabetes, 9.25% have had a stroke. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Incidence of Stroke\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Stroke)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with incidence of stroke. \n#Group by having diabetes or not having diabetes.\n#Count the number of people who have had a stroke in each category and divide by the total count.\nstroke_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    stroke_count = sum(Stroke == \"stroke\"),\n    total_count = n(),\n    stroke_percent = (stroke_count / total_count) * 100\n  )\nstroke_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary stroke_count total_count stroke_percent\n  &lt;fct&gt;                  &lt;int&gt;       &lt;int&gt;          &lt;dbl&gt;\n1 no_diabetes             7024      218334           3.22\n2 diabetes                3268       35346           9.25\n\n\n\n\nHeart Disease or Attack Summary\nOf those without diabetes, 7.34% have heart disease or have had a heart attack. Of those with diabetes, 22.3% have heart disease or have had a heart attack. This does appear to be a significant predictor.\n\n#Bar plot of Diabetes with Heart Disease or Attack\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = HeartDiseaseorAttack)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with incidence of heart disease or attack. \n#Group by having diabetes or not having diabetes.\n#Count the number of people who have heart disease or attack in each category and divide by the total count.\nhd_or_attack_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    hd_or_attack_count = sum(HeartDiseaseorAttack == \"hd_or_attack\"),\n    total_count = n(),\n    hd_or_attack_percent = (hd_or_attack_count / total_count) * 100\n  )\nhd_or_attack_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary hd_or_attack_count total_count hd_or_attack_percent\n  &lt;fct&gt;                        &lt;int&gt;       &lt;int&gt;                &lt;dbl&gt;\n1 no_diabetes                  16015      218334                 7.34\n2 diabetes                      7878       35346                22.3 \n\n\n\n\nPhysical Activity Summary\nOf those without diabetes, 77.7% have exercised in the last 30 days outside of their job. Of those with diabetes, 63.1% have exercised in the last 30 days outside of their job. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Physical Activity\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = PhysActivity)) +\n  geom_bar()\n\n\n\n#Numeric summary of diabetes with physical activity.\n#Group by having diabetes or not having diabetes.\n#Count the number of people who have done physical activity in the last 30 days in each category and divide by the total count.\nactivity_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    activity_count = sum(PhysActivity == \"activity\"),\n    total_count = n(),\n    activity_percent = (activity_count / total_count) * 100\n  )\nactivity_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary activity_count total_count activity_percent\n  &lt;fct&gt;                    &lt;int&gt;       &lt;int&gt;            &lt;dbl&gt;\n1 no_diabetes             169633      218334             77.7\n2 diabetes                 22287       35346             63.1\n\n\n\n\nFruits Summary\nOf those without diabetes, 64.2% eat fruit at least once per day. Of those with diabetes, 58.5% eat fruit at least once per day. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Fruits\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Fruits)) +\n  geom_bar()\n\n\n\n#Numeric summary with fruits. #Group by having diabetes or not having diabetes.\n#Count the number of people who eat fruit each day in each category and divide by the total count.\nfruit_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    fruit_count = sum(Fruits == \"fruits\"),\n    total_count = n(),\n    fruit_percent = (fruit_count / total_count) * 100\n  )\nfruit_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary fruit_count total_count fruit_percent\n  &lt;fct&gt;                 &lt;int&gt;       &lt;int&gt;         &lt;dbl&gt;\n1 no_diabetes          140205      218334          64.2\n2 diabetes              20693       35346          58.5\n\n\n\n\nVeggies Summary\nOf those without diabetes, 82% eat vegetables at least once per day. Of those with diabetes, 75.6% eat vegetables at least once per day. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Veggies\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Veggies)) +\n  geom_bar()\n\n\n\n#Numeric summary of diabetes with veggies.\n#Group by having diabetes or not having diabetes.\n#Count the number of people who eat vegetables daily in each category and divide by the total count.\nveggies_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    veggies_count = sum(Veggies == \"veggies\"),\n    total_count = n(),\n    veggies_percent = (veggies_count / total_count) * 100\n  )\nveggies_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary veggies_count total_count veggies_percent\n  &lt;fct&gt;                   &lt;int&gt;       &lt;int&gt;           &lt;dbl&gt;\n1 no_diabetes            179105      218334            82.0\n2 diabetes                26736       35346            75.6\n\n\n\n\nHeavy Alcohol Consumption Summary\nOf those without diabetes, 6.15% drink at least 14 drinks per week (male) or at least 7 drinks per week (female). Of those with diabetes, 2.35% drink at least 14 drinks per week (male) or at least 7 drinks per week (female). This does not appear to be a significant predictor.\n\n#Bar plot of Diabetes with Heavy Alcohol Consumption\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = HvyAlcoholConsump)) +\n  geom_bar()\n\n\n\n#Numeric summary of diabetes with heavy alcohol consumers.\n#Group by having diabetes or not having diabetes.\n#Count the number of people who heavily drink alcohol in each category and divide by the total count.\nalcohol_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    alcohol_count = sum(HvyAlcoholConsump == \"heavy_alc\"),\n    total_count = n(),\n    alcohol_percent = (alcohol_count / total_count) * 100\n  )\nalcohol_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary alcohol_count total_count alcohol_percent\n  &lt;fct&gt;                   &lt;int&gt;       &lt;int&gt;           &lt;dbl&gt;\n1 no_diabetes             13424      218334            6.15\n2 diabetes                  832       35346            2.35\n\n\n\n\nHealthcare Summary\nOf those without diabetes, 95% have health coverage. Of those with diabetes, 96% have health coverage. This does NOT appear to be a significant predictor.\n\n#Bar plot of Diabetes with Healthcare\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = AnyHealthcare)) +\n  geom_bar()\n\n\n\n#Numeric summary of diabetes with healthcare coverage.\n#Group by having diabetes or not having diabetes.\n#Count the number of people with healthcare coverage in each category and divide by the total count.\nhealthcare_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    healthcare_count = sum(AnyHealthcare == \"healthcare\"),\n    total_count = n(),\n    healthcare_percent = (healthcare_count / total_count) * 100\n  )\nhealthcare_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary healthcare_count total_count healthcare_percent\n  &lt;fct&gt;                      &lt;int&gt;       &lt;int&gt;              &lt;dbl&gt;\n1 no_diabetes               207339      218334               95.0\n2 diabetes                   33924       35346               96.0\n\n\n\n\nAvoiding Doctor due to Cost Summary\nOf those without diabetes, 8.07% have avoided the doctor because of cost. Of those with diabetes, 10.6% have avoided the doctor because of cost. This does not appear to be a significant predictor.\n\n#Bar plot of Diabetes with No Doctor because Cost\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = NoDocbcCost)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with No Doctor because cost.\n#Group by having diabetes or not having diabetes.\n#Count the number of people with a cost issue in each category and divide by the total count.\ndoc_cost_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    doc_cost_count = sum(NoDocbcCost == \"cost_issue\"),\n    total_count = n(),\n    doc_cost_percent = (doc_cost_count / total_count) * 100\n  )\ndoc_cost_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary doc_cost_count total_count doc_cost_percent\n  &lt;fct&gt;                    &lt;int&gt;       &lt;int&gt;            &lt;dbl&gt;\n1 no_diabetes              17612      218334             8.07\n2 diabetes                  3742       35346            10.6 \n\n\n\n\nGeneral Health Rating Summary\nOf those without diabetes, 20.2% rate their general health as excellent. Of those with diabetes, 3.22% rate their general health as excellent. Of those without diabetes, 37.9% rate their general health as very good. Of those with diabetes, 18.1% rate their general health as very good. Of those without diabetes, 28.5% rate their general health as good. Of those with diabetes, 28.1% rate their general health as good. Of those without diabetes, 9.98% rate their general health as fair. Of those with diabetes, 27.7% rate their general health as fair. Of those without diabetes, 3.4% rate their general health as poor. Of those with diabetes, 12.95% rate their general health as excellent. This does appear to be a significant predictor.\n\n#Bar plot of Diabetes with General Health\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = GenHlth)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with General Health Rating\n#Group by having diabetes or not having diabetes.\n#Count the number of people with each level of general health rating (excellent to poor) in each category and divide by the total count.\ngeneral_health_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    total_count = n(),\n    excellent_count = sum(GenHlth == \"excellent\"),\n    excellent_percent = (excellent_count / total_count) * 100,\n    very_good_count = sum(GenHlth == \"very_good\"),\n    very_good_percent = (very_good_count / total_count) * 100,\n    good_count = sum(GenHlth == \"good\"),\n    good_percent = (good_count / total_count) * 100,\n    fair_count = sum(GenHlth == \"fair\"),\n    fair_percent = (fair_count / total_count) * 100,\n    poor_count = sum(GenHlth == \"poor\"),\n    poor_percent = (poor_count / total_count) * 100\n  )\ngeneral_health_percent\n\n# A tibble: 2 × 12\n  Diabetes_binary total_count excellent_count excellent_percent very_good_count\n  &lt;fct&gt;                 &lt;int&gt;           &lt;int&gt;             &lt;dbl&gt;           &lt;int&gt;\n1 no_diabetes          218334           44159             20.2            82703\n2 diabetes              35346            1140              3.23            6381\n# ℹ 7 more variables: very_good_percent &lt;dbl&gt;, good_count &lt;int&gt;,\n#   good_percent &lt;dbl&gt;, fair_count &lt;int&gt;, fair_percent &lt;dbl&gt;, poor_count &lt;int&gt;,\n#   poor_percent &lt;dbl&gt;\n\n\n\n\nMental Health Days Summary\nOf those without diabetes, they have an average of 2.97 bad mental health days per month. Of those with diabetes, they have an average of 4.46 bad mental health days per month. This does not appear to be a significant predictor.\n\n#Mental Health Days\nggplot(diabetes_data, aes(x = MentHlth, fill = Diabetes_binary)) +\n  geom_boxplot()\n\n\n\n#Mental Health Days Numeric Summary\n#Group by having diabetes or not having diabetes.\n#Find the mean and median bad mental health days in those with and without diabetes. \nmental_health_num &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_mental_hlth = mean(MentHlth),\n    median_mental_hlth = median(MentHlth)\n  )\nmental_health_num\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_mental_hlth median_mental_hlth\n  &lt;fct&gt;                      &lt;dbl&gt;              &lt;dbl&gt;\n1 no_diabetes                 2.98                  0\n2 diabetes                    4.46                  0\n\n\n\n\nPhysical Illness or Injury in the Last 30 Days Summary\nOf those without diabetes, they have an average of 3.64 days of physical illness or injury in the last 30 days. Of those with diabetes, they have an average of 7.95 days of physical illness or injury in the last 30 days. This does not appear to be a significant predictor.\n\n#Physical Illness or Injury in last 30 days\nggplot(diabetes_data, aes(x = PhysHlth, fill = Diabetes_binary)) +\n  geom_boxplot()\n\n\n\n#Numeric Summary for Physical Illness or Injury or Last 30 Days\n#Group by having diabetes or not having diabetes.\n#Find the mean and median days of physical illness and injury in the last 30 days in those with and without diabetes.\nphys_health_num &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_phys_hlth = mean(PhysHlth),\n    median_phys_hlth = median(PhysHlth)\n  )\nphys_health_num\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_phys_hlth median_phys_hlth\n  &lt;fct&gt;                    &lt;dbl&gt;            &lt;dbl&gt;\n1 no_diabetes               3.64                0\n2 diabetes                  7.95                1\n\n\n\n\nDifficulty Walking Summary\nOf those without diabetes, 13.5% have difficulty walking. Of those with diabetes, 37.1% have difficulty walking. This does appear to be a significant predictor.\n\n#Bar plot of Diabetes with Difficulty Walking\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = DiffWalk)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with Difficulty Walking.\n#Group by having diabetes or not having diabetes.\n#Count the number of people with difficulty walking in each category and divide by the total count.\nwalking_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    walking_count = sum(DiffWalk == \"difficulty\"),\n    total_count = n(),\n    walking_percent = (walking_count / total_count) * 100\n  )\nwalking_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary walking_count total_count walking_percent\n  &lt;fct&gt;                   &lt;int&gt;       &lt;int&gt;           &lt;dbl&gt;\n1 no_diabetes             29554      218334            13.5\n2 diabetes                13121       35346            37.1\n\n\n\n\nSex Summary\nOf those without diabetes, 56.6% are female. Of those with diabetes, 52.1% are female. This does not appear to be a significant predictor.\n\n#Bar plot of Diabetes with Sex\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Sex)) +\n  geom_bar()\n\n\n\n#Numeric summary of Diabetes with Sex.\n#Group by having diabetes or not having diabetes.\n#Count the number of females in each category and divide by the total count.\nsex_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    sex_count = sum(Sex == \"female\"),\n    total_count = n(),\n    sex_percent = (sex_count / total_count) * 100\n  )\nsex_percent\n\n# A tibble: 2 × 4\n  Diabetes_binary sex_count total_count sex_percent\n  &lt;fct&gt;               &lt;int&gt;       &lt;int&gt;       &lt;dbl&gt;\n1 no_diabetes        123563      218334        56.6\n2 diabetes            18411       35346        52.1\n\n\n\n\nEducation Summary\nOf those without diabetes, 0.06% have no education. Of those with diabetes, 0.13% have no education. Of those without diabetes, 1.3% have an elementary education. Of those with diabetes, 3.3% have an elementary education. Of those without diabetes, 3.3% have some high school education. Of those with diabetes, 6.5% have some high school education. Of those without diabetes, 23.7% have a high school education. Of those with diabetes, 31.3% have a high school education. Of those without diabetes, 27.3% have some college education. Of those with diabetes, 29.3% have some college education. Of those without diabetes, 44.4% have completed a college education. Of those with diabetes, 29.4% have completed a college education.\n\n#Bar plot of Diabetes with Education\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Education)) +\n  geom_bar()\n\n\n\n#Numeric Summary of Diabetes with Education\n#Group by having diabetes or not having diabetes.\n#Count the number of people in each category of education (none - college graduate) in those with and without diabetes and divide by the total count.\nedu_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    total_count = n(),\n    none_count = sum(Education == \"none\"),\n    none_percent = (none_count / total_count) * 100,\n    elem_count = sum(Education == \"elementary\"),\n    elem_percent = (elem_count / total_count) * 100,\n    some_hs_count = sum(Education == \"some_hs\"),\n    some_hs_percent = (some_hs_count / total_count) * 100,\n    hs_count = sum(Education == \"high_school\"),\n    hs_percent = (hs_count / total_count) * 100,\n    some_college_count = sum(Education == \"some_college\"),\n    some_college_percent = (some_college_count / total_count) * 100,\n    college_grad_count = sum(Education == \"college_grad\"),\n    college_grad_percent = (college_grad_count / total_count) * 100\n  )\nedu_percent\n\n# A tibble: 2 × 14\n  Diabetes_binary total_count none_count none_percent elem_count elem_percent\n  &lt;fct&gt;                 &lt;int&gt;      &lt;int&gt;        &lt;dbl&gt;      &lt;int&gt;        &lt;dbl&gt;\n1 no_diabetes          218334        127       0.0582       2860         1.31\n2 diabetes              35346         47       0.133        1183         3.35\n# ℹ 8 more variables: some_hs_count &lt;int&gt;, some_hs_percent &lt;dbl&gt;,\n#   hs_count &lt;int&gt;, hs_percent &lt;dbl&gt;, some_college_count &lt;int&gt;,\n#   some_college_percent &lt;dbl&gt;, college_grad_count &lt;int&gt;,\n#   college_grad_percent &lt;dbl&gt;\n\n\n\n\nIncome Summary\nOf those without diabetes, 3.4% make less than 10,000 dollars per year. Of those with diabetes, 6.7% make less than 10,000 dollars per year. Of those without diabetes, 3.98% make between10,000 and 15,000 dollars per year. Of those with diabetes, 6.73% make between 10,000 and 15,000 dollars per year. Of those without diabetes, 5.7% make between 15,000 and 20,000 dollars per year. Of those with diabetes, 10.1% make between 15,000 and 20,000 dollars per year. Of those without diabetes, 7.4% make between 20,000 and 25,000 dollars per year. Of those with diabetes, 11.5% make between 20,000 and 25,000 dollars per year. Of those without diabetes, 9.8% make between 25,000 and 35,000 dollars per year. Of those with diabetes, 12.7% make between 25,000 and 35,000 dollars per year. Of those without diabetes, 14.28% make between 35,000 and 50,000 dollars per year Of those with diabetes, 14.96% make between 35,000 and 50,000 dollars per year. Of those without diabetes, 17.4% make between 50,000 and 75,000 dollars per year Of those with diabetes, 14.9% make between 50,000 and 75,000 dollars per year. Of those without diabetes, 38.1% make more than 75,000 dollars per year. Of those with diabetes, 20.4% more than 75,000 dollars per year.\n\n#Bar plot of Diabetes with Income\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Income)) +\n  geom_bar()\n\n\n\n#Numeric Summary of Diabetes with Income\n#Group by having diabetes or not having diabetes.\n#Count the number of people in each category of income (less than 10k - more than 75k) in those with and without diabetes and divide by the total count.\nincome_percent &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    total_count = n(),\n    less_10k_count = sum(Income == \"less_10k\"),\n    less_10k_percent = (less_10k_count / total_count) * 100,\n    ten_fifteen_count = sum(Income == \"10k_15k\"),\n    ten_fifteen_percent = (ten_fifteen_count / total_count) * 100,\n    fifteen_twenty_count = sum(Income == \"15k_20k\"),\n    fifteen_twenty_percent = (fifteen_twenty_count / total_count) * 100,\n    twenty_twentyfive_count = sum(Income == \"20k_25k\"),\n    twenty_twentyfive_percent = (twenty_twentyfive_count / total_count) * 100,\n    twentyfive_thirtyfive_count = sum(Income == \"25k_35k\"),\n    twentyfive_thirtyfive_percent = (twentyfive_thirtyfive_count / total_count) * 100,\n    thirtyfive_fifty_count = sum(Income == \"35k_50k\"),\n    thirtyfive_fifty_percent = (thirtyfive_fifty_count / total_count) * 100,\n    fifty_seventyfive_count = sum(Income == \"50k_75k\"),\n    fifty_seventyfive_percent = (fifty_seventyfive_count / total_count) * 100,\n    greater_seventyfive_count = sum(Income == \"more_75k\"),\n    greater_seventyfive_percent = (greater_seventyfive_count / total_count) * 100\n  )\nincome_percent\n\n# A tibble: 2 × 18\n  Diabetes_binary total_count less_10k_count less_10k_percent ten_fifteen_count\n  &lt;fct&gt;                 &lt;int&gt;          &lt;int&gt;            &lt;dbl&gt;             &lt;int&gt;\n1 no_diabetes          218334           7428             3.40              8697\n2 diabetes              35346           2383             6.74              3086\n# ℹ 13 more variables: ten_fifteen_percent &lt;dbl&gt;, fifteen_twenty_count &lt;int&gt;,\n#   fifteen_twenty_percent &lt;dbl&gt;, twenty_twentyfive_count &lt;int&gt;,\n#   twenty_twentyfive_percent &lt;dbl&gt;, twentyfive_thirtyfive_count &lt;int&gt;,\n#   twentyfive_thirtyfive_percent &lt;dbl&gt;, thirtyfive_fifty_count &lt;int&gt;,\n#   thirtyfive_fifty_percent &lt;dbl&gt;, fifty_seventyfive_count &lt;int&gt;,\n#   fifty_seventyfive_percent &lt;dbl&gt;, greater_seventyfive_count &lt;int&gt;,\n#   greater_seventyfive_percent &lt;dbl&gt;\n\n\n\n\nModeling Page\nClick here for the Modeling Page"
  },
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "ST 558 Final Project Modeling Document",
    "section": "",
    "text": "The ultimate goal of modeling is to find the best predictive model (logistic regression, classification tree, and random forest) that can be used in the prediction of the diagnosis of Diabetes. This is beneficial because Diabetes is a very prevalent chronic disease. By using a predictive model, we could potentially provide earlier diagnosis and/or monitor patients that have a higher likelihood of developing Diabetes due to certain risk factors.\nBased on the previous EDA, I have identified 5 significant predictors: High Blood Pressure, High Cholesterol, Heart Disease or Attack, General Health Rating, and Difficulty Walking. Information on the target variable and the predictor variables is below.\nThe Diabetes_binary column takes on 3 values: 0 for no diabetes, 1 for prediabetes or diabetes.\nThe HighBP column takes on 2 values: 0 for no high blood pressure and 1 for high blood pressure.\nThe HighChol column takes on 2 values: 0 for no high cholesterol and 1 for high cholesterol.\nThe HeartDiseaseorAttack column takes on 2 values: 0 if no coronary heart disease or myocardial infarction and 1 if have coronary heart disease or myocardial infarction.\nThe GenHlth column takes on 5 values based on rating of general health: 1 is excellent, 2 is very good, 3 good, 4 is fair, and 5 is poor.\nThe DiffWalk column takes on 2 values: 0 if no difficulty climbing stairs or walking and 1 if difficulty climbing stairs or walking."
  },
  {
    "objectID": "Modeling.html#best-logistic-model",
    "href": "Modeling.html#best-logistic-model",
    "title": "ST 558 Final Project Modeling Document",
    "section": "Best Logistic Model",
    "text": "Best Logistic Model\nBased on the three previous logistic models, Logistic Model #3 appears to be the best with the lowest logloss metric (0.3327) on the training set."
  }
]