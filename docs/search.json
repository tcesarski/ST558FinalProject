[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "ST 558 Final Project EDA Document",
    "section": "",
    "text": "Introduction\nThe Diabetes_binary column takes on 3 values: 0 for no diabetes, 1 for prediabetes, and 2 for diabetes.\nThe HighBP column takes on 2 values: 0 for no high blood pressure and 1 for high blood pressure.\nThe HighChol column takes on 2 values: 0 for no high cholesterol and 1 for high cholesterol.\nThe CholCheck column takes on 2 values: 0 for no cholesterol check in the last five years and 1 for cholesterol check in the last five years.\nThe BMI column is the body mass index.\nThe Smoker column takes on 2 values: 0 for having not smoked at least 100 cigarettes in lifetime and 1 for having smoked at least 100 cigarettes in lifetime.\nThe Stroke column takes on 2 values: 0 for never had a stroke and 1 for had a stroke.\nThe HeartDiseaseorAttack column takes on 2 values: 0 if no coronary heart disease or myocardial infarction and 1 if have coronary heart disease or myocardial infarction.\nThe PhysActivity column takes on 2 values: 0 if no physical activity in last 30 days outside of job and 1 if physical activity in last 30 days outside of job.\nThe Fruits column takes on 2 values: 0 if don’t consume fruit at least once per day and 1 if consumes fruit at least once per day.\nThe Veggies column takes on 2 values: 0 if don’t consume vegetables at least once per day and 1 if consumes vegetables at least once per day.\nThe HvyAlcoholConsump column takes on 2 values: 0 if man with less than 14 drinks per week or woman with less than 7 drinks per week or 1 if man with greater than or equal to 14 drinks/week and female with greater than or equal to 7 drinks per week.\nThe AnyHealthcare column takes on 2 values: 0 if no health coverage and 1 if health coverage.\nThe NoDocbcCost column takes on 2 values: 0 if didn’t refuse doctor because of cost and 1 if refused doctor because of cost.\nThe GenHlth column takes on 5 values based on rating of general health: 1 is excellent, 2 is very good, 3 good, 4 is fair, and 5 is poor.\nThe MentHlth column represents the days of poor mental health 1-30.\nThe PhysHlth column represents the days of physical illness or injury 1-30.\nThe DiffWalk column takes on 2 values: 0 if no difficulty climbing stairs or walking and 1 if difficulty climbing stairs or walking.\nThe Sex column takes on 2 values: 0 if female and 1 if male.\nThe Age column takes on 13 values: 1: 18-24 2: 25-29 3: 30-34 4: 35-39 5: 40-44 6: 45-49 7: 50-54 8: 55-59 9: 60-64 10: 65-69 11: 70-74 12: 75-79 13: 80+\nThe Education column takes on 6 values: 1: no school 2: elementary\nThe Income column takes on 8 values:\n\n\nData\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndiabetes_data$Diabetes_binary &lt;- factor(diabetes_data$Diabetes_binary, levels = c(0, 1), labels = c(\"no_diabetes\", \"prediabetes\"))\n\ndiabetes_data$HighBP &lt;- factor(diabetes_data$HighBP, levels = c(0, 1), labels = c(\"no_hbp\", \"hbp\"))\n\ndiabetes_data$HighChol &lt;- factor(diabetes_data$HighChol, levels = c(0, 1), labels = c(\"no_high_chol\", \"high_chol\"))\n\ndiabetes_data$CholCheck &lt;- factor(diabetes_data$CholCheck, levels = c(0, 1), labels = c(\"no_chol_check\", \"chol_check\"))\n\ndiabetes_data$Smoker &lt;- factor(diabetes_data$Smoker, levels = c(0, 1), labels = c(\"non_smoker\", \"smoker\"))\n\ndiabetes_data$Stroke &lt;- factor(diabetes_data$Stroke, levels = c(0, 1), labels = c(\"no_stroke\", \"stroke\"))\n\ndiabetes_data$HeartDiseaseorAttack &lt;- factor(diabetes_data$HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"no_hd_or_attack\", \"hd_or_attack\"))\n\ndiabetes_data$PhysActivity &lt;- factor(diabetes_data$PhysActivity, levels = c(0, 1), labels = c(\"no_activity\", \"activity\"))\n\ndiabetes_data$Fruits &lt;- factor(diabetes_data$Fruits, levels = c(0, 1), labels = c(\"no_fruits\", \"fruits\"))\n\ndiabetes_data$Veggies &lt;- factor(diabetes_data$Veggies, levels = c(0, 1), labels = c(\"no_veggies\", \"veggies\"))\n\ndiabetes_data$HvyAlcoholConsump &lt;- factor(diabetes_data$HvyAlcoholConsump, levels = c(0, 1), labels = c(\"no_heavy_alc\", \"heavy_alc\"))\n\ndiabetes_data$AnyHealthcare &lt;- factor(diabetes_data$AnyHealthcare, levels = c(0, 1), labels = c(\"no_healthcare\", \"healthcare\"))\n\ndiabetes_data$NoDocbcCost &lt;- factor(diabetes_data$NoDocbcCost, levels = c(0, 1), labels = c(\"no_cost_issue\", \"cost_issue\"))\n\ndiabetes_data$GenHlth &lt;- factor(diabetes_data$GenHlth, levels = c(1, 2, 3, 4, 5), labels = c(\"excellent\", \"very good\", \"good\", \"fair\", \"poor\"))\n\ndiabetes_data$DiffWalk &lt;- factor(diabetes_data$DiffWalk, levels = c(0, 1), labels = c(\"no_difficulty\", \"difficulty\"))\n\ndiabetes_data$Sex &lt;- factor(diabetes_data$Sex, levels = c(0, 1), labels = c(\"female\", \"male\"))\n\ndiabetes_data$Age &lt;- factor(diabetes_data$Age, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), labels = c(\"18_24\", \"25_29\", \"30_34\", \"35_39\", \"40_44\", \"45_49\", \"50_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\", \"80_or_more\"))\n\n#Need to still find Education and Income\n\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol     CholCheck       BMI Smoker     Stroke   \n   &lt;fct&gt;           &lt;fct&gt;  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt; &lt;fct&gt;      &lt;fct&gt;    \n 1 no_diabetes     hbp    high_chol    chol_check       40 smoker     no_stroke\n 2 no_diabetes     no_hbp no_high_chol no_chol_check    25 smoker     no_stroke\n 3 no_diabetes     hbp    high_chol    chol_check       28 non_smoker no_stroke\n 4 no_diabetes     hbp    no_high_chol chol_check       27 non_smoker no_stroke\n 5 no_diabetes     hbp    high_chol    chol_check       24 non_smoker no_stroke\n 6 no_diabetes     hbp    high_chol    chol_check       25 smoker     no_stroke\n 7 no_diabetes     hbp    no_high_chol chol_check       30 smoker     no_stroke\n 8 no_diabetes     hbp    high_chol    chol_check       25 smoker     no_stroke\n 9 prediabetes     hbp    high_chol    chol_check       30 smoker     no_stroke\n10 no_diabetes     no_hbp no_high_chol chol_check       24 non_smoker no_stroke\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;fct&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n#Missing Data\nmissing_vals &lt;- colSums(is.na(diabetes_data))\nmissing_vals\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\n\n\nSummarizations\n\n#Bar plot of Diabetes with HighBP\nggplot(diabetes_data, aes(x = HighBP, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nhbp_percent &lt;- diabetes_data |&gt;\n  group_by(HighBP) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nhbp_percent\n\n# A tibble: 2 × 4\n  HighBP prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;              &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_hbp              8742      144851                6.04\n2 hbp                26604      108829               24.4 \n\n#Bar plot of Diabetes with HighChol\nggplot(diabetes_data, aes(x = HighChol, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nhigh_chol_percent &lt;- diabetes_data |&gt;\n  group_by(HighChol) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nhigh_chol_percent\n\n# A tibble: 2 × 4\n  HighChol     prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                    &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_high_chol             11660      146089                7.98\n2 high_chol                23686      107591               22.0 \n\n#Bar plot of Diabetes with CholCheck\nggplot(diabetes_data, aes(x = CholCheck, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nchol_check_percent &lt;- diabetes_data |&gt;\n  group_by(CholCheck) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nchol_check_percent\n\n# A tibble: 2 × 4\n  CholCheck     prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                     &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_chol_check               241        9470                2.54\n2 chol_check                35105      244210               14.4 \n\n#BMI\nggplot(diabetes_data, aes(x = BMI, fill = Diabetes_binary)) +\n  geom_density(alpha = 0.5)\n\n\n\nbmi_numeric &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_bmi = mean(BMI),\n    median_bmi = median(BMI)\n  )\nbmi_numeric\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_bmi median_bmi\n  &lt;fct&gt;              &lt;dbl&gt;      &lt;dbl&gt;\n1 no_diabetes         27.8         27\n2 prediabetes         31.9         31\n\n#Bar plot of Diabetes with Smoker status\nggplot(diabetes_data, aes(x = Smoker, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nsmoker_percent &lt;- diabetes_data |&gt;\n  group_by(Smoker) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nsmoker_percent\n\n# A tibble: 2 × 4\n  Smoker     prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                  &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 non_smoker             17029      141257                12.1\n2 smoker                 18317      112423                16.3\n\n#Bar plot of Diabetes with Stroke\nggplot(diabetes_data, aes(x = Stroke, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nstroke_percent &lt;- diabetes_data |&gt;\n  group_by(Stroke) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nstroke_percent\n\n# A tibble: 2 × 4\n  Stroke    prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                 &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_stroke             32078      243388                13.2\n2 stroke                 3268       10292                31.8\n\n#Bar plot of Diabetes with Heart Disease or Attack\nggplot(diabetes_data, aes(x = HeartDiseaseorAttack, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nhd_or_attack_percent &lt;- diabetes_data |&gt;\n  group_by(HeartDiseaseorAttack) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nhd_or_attack_percent\n\n# A tibble: 2 × 4\n  HeartDiseaseorAttack prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                            &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_hd_or_attack                  27468      229787                12.0\n2 hd_or_attack                      7878       23893                33.0\n\n#Bar plot of Diabetes with Physical Activity\nggplot(diabetes_data, aes(x = PhysActivity, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nactivity_percent &lt;- diabetes_data |&gt;\n  group_by(PhysActivity) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nactivity_percent\n\n# A tibble: 2 × 4\n  PhysActivity prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                    &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_activity              13059       61760                21.1\n2 activity                 22287      191920                11.6\n\n#Bar plot of Diabetes with Fruits\nggplot(diabetes_data, aes(x = Fruits, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nfruit_percent &lt;- diabetes_data |&gt;\n  group_by(Fruits) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nfruit_percent\n\n# A tibble: 2 × 4\n  Fruits    prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                 &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_fruits             14653       92782                15.8\n2 fruits                20693      160898                12.9\n\n#Bar plot of Diabetes with CholCheck\nggplot(diabetes_data, aes(x = Veggies, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nveggies_percent &lt;- diabetes_data |&gt;\n  group_by(Veggies) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nveggies_percent\n\n# A tibble: 2 × 4\n  Veggies    prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                  &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_veggies              8610       47839                18.0\n2 veggies                26736      205841                13.0\n\n#Bar plot of Diabetes with Heavy Alcohol Consumption\nggplot(diabetes_data, aes(x = HvyAlcoholConsump, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nalcohol_percent &lt;- diabetes_data |&gt;\n  group_by(HvyAlcoholConsump) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nalcohol_percent\n\n# A tibble: 2 × 4\n  HvyAlcoholConsump prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                         &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_heavy_alc                  34514      239424               14.4 \n2 heavy_alc                       832       14256                5.84\n\n#Bar plot of Diabetes with Healthcare\nggplot(diabetes_data, aes(x = AnyHealthcare, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nhealthcare_percent &lt;- diabetes_data |&gt;\n  group_by(AnyHealthcare) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nhealthcare_percent\n\n# A tibble: 2 × 4\n  AnyHealthcare prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                     &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_healthcare              1422       12417                11.5\n2 healthcare                33924      241263                14.1\n\n#Bar plot of Diabetes with No Doctor because Cost\nggplot(diabetes_data, aes(x = NoDocbcCost, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\ndoc_cost_percent &lt;- diabetes_data |&gt;\n  group_by(NoDocbcCost) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\ndoc_cost_percent\n\n# A tibble: 2 × 4\n  NoDocbcCost   prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                     &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_cost_issue             31604      232326                13.6\n2 cost_issue                 3742       21354                17.5\n\n#Bar plot of Diabetes with General Health\nggplot(diabetes_data, aes(x = GenHlth, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\ngeneral_health_percent &lt;- diabetes_data |&gt;\n  group_by(GenHlth) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\ngeneral_health_percent\n\n# A tibble: 5 × 4\n  GenHlth   prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                 &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 excellent              1140       45299                2.52\n2 very good              6381       89084                7.16\n3 good                  13457       75646               17.8 \n4 fair                   9790       31570               31.0 \n5 poor                   4578       12081               37.9 \n\n#Mental Health Days\nggplot(diabetes_data, aes(x = MentHlth, fill = Diabetes_binary)) +\n  geom_boxplot()\n\n\n\nmental_health_num &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_mental_hlth = mean(MentHlth),\n    median_mental_hlth = median(MentHlth)\n  )\nmental_health_num\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_mental_hlth median_mental_hlth\n  &lt;fct&gt;                      &lt;dbl&gt;              &lt;dbl&gt;\n1 no_diabetes                 2.98                  0\n2 prediabetes                 4.46                  0\n\n#Physical Illness or Injury in last 30 days\nggplot(diabetes_data, aes(x = PhysHlth, fill = Diabetes_binary)) +\n  geom_boxplot()\n\n\n\nphys_health_num &lt;- diabetes_data |&gt;\n  group_by(Diabetes_binary) |&gt;\n  summarize(\n    mean_mental_hlth = mean(PhysHlth),\n    median_mental_hlth = median(PhysHlth)\n  )\nphys_health_num\n\n# A tibble: 2 × 3\n  Diabetes_binary mean_mental_hlth median_mental_hlth\n  &lt;fct&gt;                      &lt;dbl&gt;              &lt;dbl&gt;\n1 no_diabetes                 3.64                  0\n2 prediabetes                 7.95                  1\n\n#Bar plot of Diabetes with Difficulty Walking\nggplot(diabetes_data, aes(x = DiffWalk, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nwalking_percent &lt;- diabetes_data |&gt;\n  group_by(DiffWalk) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nwalking_percent\n\n# A tibble: 2 × 4\n  DiffWalk      prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;                     &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 no_difficulty             22225      211005                10.5\n2 difficulty                13121       42675                30.7\n\n#Bar plot of Diabetes with Sex\nggplot(diabetes_data, aes(x = Sex, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nsex_percent &lt;- diabetes_data |&gt;\n  group_by(Sex) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nsex_percent\n\n# A tibble: 2 × 4\n  Sex    prediabetes_count total_count prediabetes_percent\n  &lt;fct&gt;              &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1 female             18411      141974                13.0\n2 male               16935      111706                15.2\n\n#Bar plot of Diabetes with Education\nggplot(diabetes_data, aes(x = Education, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nedu_percent &lt;- diabetes_data |&gt;\n  group_by(Education) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nedu_percent\n\n# A tibble: 6 × 4\n  Education prediabetes_count total_count prediabetes_percent\n      &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1         1                47         174               27.0 \n2         2              1183        4043               29.3 \n3         3              2296        9478               24.2 \n4         4             11066       62750               17.6 \n5         5             10354       69910               14.8 \n6         6             10400      107325                9.69\n\n#Bar plot of Diabetes with Income\nggplot(diabetes_data, aes(x = Income, fill = Diabetes_binary)) +\n  geom_bar()\n\n\n\nincome_percent &lt;- diabetes_data |&gt;\n  group_by(Income) |&gt;\n  summarize(\n    prediabetes_count = sum(Diabetes_binary == \"prediabetes\"),\n    total_count = n(),\n    prediabetes_percent = (prediabetes_count / total_count) * 100\n  )\nincome_percent\n\n# A tibble: 8 × 4\n  Income prediabetes_count total_count prediabetes_percent\n   &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;               &lt;dbl&gt;\n1      1              2383        9811               24.3 \n2      2              3086       11783               26.2 \n3      3              3568       15994               22.3 \n4      4              4054       20135               20.1 \n5      5              4504       25883               17.4 \n6      6              5291       36470               14.5 \n7      7              5265       43219               12.2 \n8      8              7195       90385                7.96"
  },
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "ST 558 Final Project EDA Document",
    "section": "",
    "text": "Introduction\n\n\nlogLoss\n\n\nLogistic Regression Models\nA logistic regression model is a generalized linear model that has a response that is a success/failure. In this case, 0 represents “failure” which is no diabetes and 1 represents success which is prediabetes. A logistic model uses a logit link (or log(odds)) to connect the average response with a linear function in the parameters.\n\n\nClassification Tree\nA classification tree is the idea of splitting up the predictor space into regions and having different predictions for each region. For a classification tree specifically, the goal is to predict group membership - no diabetes, prediabetes, or diabetes in this case. We will use the most prevalent class to predict. This method is very easy to understand, we don’t need to include interaction terms, we don’t need to scale or utilize statistical assumptions.\n\n\nRandom Forest\nA random forest extends the idea of bootstrap aggregation, but uses a random subset of predictors rather than all predictors. It can reduce the variance in comparison to a basic classification tree because you are averaging across trees.\n\n\nFinal Model Selection"
  }
]